t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
rc <- seq(0,16,.01)
sc <- c(rep(6, length(rc)), rep(5, length(rc)), rep(10, length(rc)), rep(11, length(rc)))
## RANDOM EFFECTS
## such that subject parameters have about a .4 correlation with true parameters
exponentsRandom <- 0
lossAversionRandom <- 0
pWeightRandom <- 0
interceptRandom <- 0
## within-subject noise
noiseSd <- 0
bias <- .1
subjectProfile <- buildSubjectProfile()
d <- data.frame(riskyCritical = rep(rc, 4), safeCritical = sc)
d$proba <- decision(riskyCritical = d$riskyCritical, safeCritical = d$safeCritical, bias = bias, subjectProfile = subjectProfile)
d %>%
ggplot(aes(x = riskyCritical, y = proba)) +
geom_line() +
facet_wrap(~safeCritical) +
scale_x_continuous(labels = 0:16, breaks = 0:16) +
geom_hline(yintercept = .5, linetype='dashed')
dCells <- d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5)
d <- powerSimulator(100, 0.2, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
dCells <- d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5)
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0.1)
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
d <- powerSimulator(100, 0.2, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
dCells <- d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp2/runSimulation/powerSimulator.r')
d <- powerSimulator(100, 0.2, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
dCells <- d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
d <- powerSimulator(100, 0.3, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
dCells <- d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
d <- powerSimulator(100, 0.5, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
dCells <- d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
d <- powerSimulator(100, 1, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
dCells <- d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp2/runSimulation/powerSimulator.r')
d <- powerSimulator(100, 1, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
dCells <- d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
q()
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp2/runSimulation/powerSimulator.r')
d <- powerSimulator(100, 1, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
## visualize difference
## TRUE PARAMETERS
exponentsFixed <- .70
lossAversionFixed <- 2
pWeightFixed <- .80
d <- powerSimulator(100, 1, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
## visualize difference
## visualize difficulty
dCells <- d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
powerSimulator(10,1,10,1)
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
m <- t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
m$p.value
experimentData <- d
difficultyMeans <- experimentData %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
difficultyMeans
difficultyMeans[difficulty == 'easier']
difficultyMeans[difficulty == 'easier',]
difficultyMeans[difficultyMeans,difficulty == 'easier',]
difficultyMeans[difficultyMeans$difficulty == 'easier',]
difficultyMeans[difficultyMeans$difficulty == 'easier',] - 2
difficultyMeans[difficultyMeans$difficulty == 'easier', 'riskySelection'] - 2
difficultyMeans[difficultyMeans$difficulty == 'easier',]$riskySelection
help(t.test)
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
testDirection <- function(experimentData) {
## takes as input experimentData
## returns 1 if the results of the three planned t tests are significant and if the means are in the right direction
output <- 0
difficultyMeans <- experimentData %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
easierMean <- difficultyMeans[difficultyMeans$difficulty == 'easier',]$riskySelection
harderMean <- difficultyMeans[difficultyMeans$difficulty == 'harder',]$riskySelection
pEasier <- t.test(experimentData[experimentData$difficulty == 'easier',]$riskySelection, mu = .5)
pHarder <- t.test(experimentData[experimentData$difficulty == 'harder',]$riskySelection, mu = .5)
pContrast <- t.test(experimentData[experimentData$difficulty == 'harder',]$riskySelection, experimentData[experimentData$difficulty == 'easier',]$riskySelection, paired = TRUE)
if (pEasier < .05 & pHarder < .05 & pContrast < .05 & easierMean < .5 & harderMean > .5 & easierMean < harderMean) {
output <- 1
}
return(output)
}
testDirection(d)
m
testDirection <- function(experimentData) {
## takes as input experimentData
## returns 1 if the results of the three planned t tests are significant and if the means are in the right direction
output <- 0
difficultyMeans <- experimentData %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
easierMean <- difficultyMeans[difficultyMeans$difficulty == 'easier',]$riskySelection
harderMean <- difficultyMeans[difficultyMeans$difficulty == 'harder',]$riskySelection
pEasier <- t.test(experimentData[experimentData$difficulty == 'easier',]$riskySelection, mu = .5)$p.value
pHarder <- t.test(experimentData[experimentData$difficulty == 'harder',]$riskySelection, mu = .5)$p.value
pContrast <- t.test(experimentData[experimentData$difficulty == 'harder',]$riskySelection, experimentData[experimentData$difficulty == 'easier',]$riskySelection, paired = TRUE)$p.value
if (pEasier < .05 & pHarder < .05 & pContrast < .05 & easierMean < .5 & harderMean > .5 & easierMean < harderMean) {
output <- 1
}
return(output)
}
testDirection(d)
d <- powerSimulator(100, 1, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
testDirection(d)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp2/runSimulation/powerSimulator.r')
powerSimulator(100,1,5,1)
## visualize difference
d %>%
group_by(subject, difference) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difference, y = riskySelection, group = subject)) +
geom_line()
d %>%
group_by(subject, difficulty, difference) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty, difference) %>%
summarize(refDev = mean(riskySelection), se = sd(riskySelection) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = refDev, group = difference)) +
geom_bar(aes(fill = difference), position = position_dodge(width = .9), stat = 'identity') +
geom_errorbar(aes(ymin = refDev - se, ymax = refDev + se), position = position_dodge(width = .9), width = .5) +
ylim(0,1)
## TRUE PARAMETERS -- SIGNAL
exponentsFixed <- .75
lossAversionFixed <- 2
pWeightFixed <- .85
## RANDOM EFFECTS -- NOISE
## such that subject parameters have about a .4 correlation with true parameters
exponentsRandom <- .35
lossAversionRandom <- .60
pWeightRandom <- .20
interceptRandom <- 4.5
## within-subject noise
noiseSd <- 2
powerSimulator(100,1,5,1)
## TRUE PARAMETERS -- SIGNAL
lossAversionFixed <- 2
## these two are reverse
## smaller is stronger
exponentsFixed <- .70
pWeightFixed <- .80
powerSimulator(100,1,5,1)
interceptRandom <- 4
## TRUE PARAMETERS -- SIGNAL
lossAversionFixed <- 2
## these two are reverse
## smaller is stronger
exponentsFixed <- .70
pWeightFixed <- .80
## RANDOM EFFECTS -- NOISE
## such that subject parameters have about a .4 correlation with true parameters
exponentsRandom <- .35
lossAversionRandom <- .60
pWeightRandom <- .20
interceptRandom <- 4
d <- powerSimulator(100, 1, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
dCells <- d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
interceptRandom <- 3.5
d <- powerSimulator(100, 1, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = d, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(d[d$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(d[d$difficulty == 'easier',]$riskySelection, d[d$difficulty == 'harder',]$riskySelection, paired = TRUE)
dCells <- d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
d %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
powerSimulator(100,1,5,1)
rc <- seq(0,16,.01)
sc <- c(rep(6, length(rc)), rep(5, length(rc)), rep(10, length(rc)), rep(11, length(rc)))
## RANDOM EFFECTS
## such that subject parameters have about a .4 correlation with true parameters
exponentsRandom <- 0
lossAversionRandom <- 0
pWeightRandom <- 0
interceptRandom <- 0
## within-subject noise
noiseSd <- 0
bias <- .1
subjectProfile <- buildSubjectProfile()
d <- data.frame(riskyCritical = rep(rc, 4), safeCritical = sc)
d$proba <- decision(riskyCritical = d$riskyCritical, safeCritical = d$safeCritical, bias = bias, subjectProfile = subjectProfile)
d %>%
ggplot(aes(x = riskyCritical, y = proba)) +
geom_line() +
facet_wrap(~safeCritical) +
scale_x_continuous(labels = 0:16, breaks = 0:16) +
geom_hline(yintercept = .5, linetype='dashed')
conditions <- data.frame(difficulty = factor(c(rep('easier', 2), rep('harder', 2))),
difference = factor(rep(c('moderate', 'extreme'), 2)),
riskyCritical = c(4, 2, 12, 14),
safeCritical = c(6, 5, 10, 11))
conditions$proba <- with(conditions, decision(riskyCritical = riskyCritical, safeCritical = safeCritical, bias = bias, subjectProfile = subjectProfile))
conditions %>%
ggplot(aes(x = difficulty, y = proba, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), position = position_dodge(width = .9)) +
ylim(0,1)
#pWeightFixed <- .80
pWeightFixed <- .5
rc <- seq(0,16,.01)
sc <- c(rep(6, length(rc)), rep(5, length(rc)), rep(10, length(rc)), rep(11, length(rc)))
## RANDOM EFFECTS
## such that subject parameters have about a .4 correlation with true parameters
exponentsRandom <- 0
lossAversionRandom <- 0
pWeightRandom <- 0
interceptRandom <- 0
## within-subject noise
noiseSd <- 0
bias <- .1
subjectProfile <- buildSubjectProfile()
d <- data.frame(riskyCritical = rep(rc, 4), safeCritical = sc)
d$proba <- decision(riskyCritical = d$riskyCritical, safeCritical = d$safeCritical, bias = bias, subjectProfile = subjectProfile)
d %>%
ggplot(aes(x = riskyCritical, y = proba)) +
geom_line() +
facet_wrap(~safeCritical) +
scale_x_continuous(labels = 0:16, breaks = 0:16) +
geom_hline(yintercept = .5, linetype='dashed')
bias <- 1
subjectProfile <- buildSubjectProfile()
d <- data.frame(riskyCritical = rep(rc, 4), safeCritical = sc)
d$proba <- decision(riskyCritical = d$riskyCritical, safeCritical = d$safeCritical, bias = bias, subjectProfile = subjectProfile)
d %>%
ggplot(aes(x = riskyCritical, y = proba)) +
geom_line() +
facet_wrap(~safeCritical) +
scale_x_continuous(labels = 0:16, breaks = 0:16) +
geom_hline(yintercept = .5, linetype='dashed')
conditions <- data.frame(difficulty = factor(c(rep('easier', 2), rep('harder', 2))),
difference = factor(rep(c('moderate', 'extreme'), 2)),
riskyCritical = c(4, 2, 12, 14),
safeCritical = c(6, 5, 10, 11))
conditions$proba <- with(conditions, decision(riskyCritical = riskyCritical, safeCritical = safeCritical, bias = bias, subjectProfile = subjectProfile))
conditions %>%
ggplot(aes(x = difficulty, y = proba, group = difference)) +
geom_bar(stat = 'identity', aes(fill = difference), position = position_dodge(width = .9)) +
ylim(0,1)
oneExperiment <- powerSimulator(100, 1, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = oneExperiment, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(oneExperiment[oneExperiment$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(oneExperiment[oneExperiment$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(oneExperiment[oneExperiment$difficulty == 'easier',]$riskySelection, oneExperiment[oneExperiment$difficulty == 'harder',]$riskySelection, paired = TRUE)
pWeightFixed
pWeightFixed <- .80
oneExperiment <- powerSimulator(100, 1, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = oneExperiment, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(oneExperiment[oneExperiment$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(oneExperiment[oneExperiment$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(oneExperiment[oneExperiment$difficulty == 'easier',]$riskySelection, oneExperiment[oneExperiment$difficulty == 'harder',]$riskySelection, paired = TRUE)
dCells <- oneExperiment %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
oneExperiment %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
interceptRandom
source('powerSimulator.r')
interceptRandom
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp2/runSimulation/powerSimulator.r')
interceptRandom
source('powerSimulator.r')
oneExperiment <- powerSimulator(100, 1, 1, 1)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = riskySelection, data = oneExperiment, detailed = TRUE)
m1
paste('Difficulty Effect Size:', round(m1$ANOVA$SSn[3] /(m1$ANOVA$SSn[3] + m1$ANOVA$SSd[3]), 2))
t.test(oneExperiment[oneExperiment$difficulty == 'harder',]$riskySelection, mu = .5)
t.test(oneExperiment[oneExperiment$difficulty == 'easier',]$riskySelection, mu = .5)
t.test(oneExperiment[oneExperiment$difficulty == 'easier',]$riskySelection, oneExperiment[oneExperiment$difficulty == 'harder',]$riskySelection, paired = TRUE)
dCells <- oneExperiment %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
group_by(difficulty) %>%
summarize(riskySelection = mean(riskySelection))
oneExperiment %>%
group_by(subject, difficulty) %>%
summarize(riskySelection = mean(riskySelection)) %>%
ggplot(aes(x = difficulty, y = riskySelection, group = subject)) +
geom_line() +
geom_bar(data = dCells, stat = 'identity', aes(x = difficulty, y = riskySelection, group = 1), alpha = .5) +
ylim(0,1)
powerSimulator(100, 1, 5, 1)
powerSimulator(100, .4, 5, 1)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp2/runSimulation/powerSimulator.r')
powerSimulator(100, .4, 5, 1)
powerSimulator(20, .4, 5, 1)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp2/runSimulation/powerSimulator.r')
powerSimulator(20, .4, 5, 1)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp2/runSimulation/hyperparameterTuning.r')
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp2/runSimulation/hyperparameterTuning.r')
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp2/runSimulation/hyperparameterTuning.r')
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp2/runSimulation/powerSimulator.r')
q()
