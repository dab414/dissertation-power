experimentData$difference <- factor(experimentData$difference)
experimentData$difficulty <- factor(experimentData$difficulty)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = referenceDeviation, data = d2, detailed = TRUE)
m1
d2 %>%
group_by(subject, difference) %>%
summarize(referenceDeviation) %>%
ggplot(aes(x = difference, y = referenceDeviation, group = subject)) +
geom_line()
d2 %>%
group_by(subject, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difference, y = referenceDeviation, group = subject)) +
geom_line()
head(d2)
head(d1)
head(d)
translateToDeviation <- function(d) {
## takes as input experiment data
d <- d %>%
group_by(subject, difference, difficulty) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
unite('condition', c('difference', 'difficulty')) %>%
spread(condition, referenceSelection) %>%
mutate(moderate_easier_deviation = abs(moderate_easier - 0.5),
moderate_harder_deviation = abs(moderate_harder - 0.5),
extreme_easier_deviation = abs(extreme_easier - moderate_easier),
extreme_harder_deviation = abs(extreme_harder - moderate_harder)) %>%
select(subject, contains('deviation')) %>%
gather(condition, referenceDeviation, contains('deviation')) %>%
separate(condition, c('difference', 'difficulty'))
return(d)
}
d2 <- translateToDeviation(d)
head(d2)
experimentData$subject <- factor(experimentData$subject)
experimentData$difference <- factor(experimentData$difference)
experimentData$difficulty <- factor(experimentData$difficulty)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = referenceDeviation, data = d2, detailed = TRUE)
m1
d2[d2[d2$difficulty == 'harder',]$referenceDeviation < d2[d2$difficulty == 'easier',]$referenceDeviation,]
tail(d2)
nrow(d2)
d2[d2$subject==2,]
d3 <- d2 %>%
group_by(subject, difficulty) %>%
summarize(referenceDeviation = mean(referenceDeviation))
head(d3)
d3 %>%
spread(difficulty, referenceDeviation) %>%
filter(easier > harder)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
d <- powerSimulator(30,1,1)
tail(experimentData)
head(d)
d <- translateToDeviation(d)
m1 <- ezANOVA(wid = subject, within = .(difference, difficulty), dv = referenceDeviation, data = d, detailed = TRUE)
m1
## visualize difference
d %>%
group_by(subject, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difference, y = referenceDeviation, group = subject)) %>%
geom_line()
## visualize difference
d %>%
group_by(subject, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difference, y = referenceDeviation, group = subject)) +
geom_line()
## visualize difficulty
d %>%
group_by(subject, difficulty) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difficulty, y = referenceDeviation, group = subject)) +
geom_line()
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
d <- powerSimulator(30,1,1)
d <- translateToDeviation(d)
ezANOVA(wid = subject, within = .(difference, difficulty), dv = referenceDeviation, data = d, detailed = TRUE)
## visualize difference
d %>%
group_by(subject, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difference, y = referenceDeviation, group = subject)) +
geom_line()
## visualize difficulty
d %>%
group_by(subject, difficulty) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difficulty, y = referenceDeviation, group = subject)) +
geom_line()
convertBias(bias,lossAversionFixed)
bias <- 1
convertBias(bias,lossAversionFixed)
subjectProfile <- c(subjectIntercept = rnorm(1, 0, interceptRandom),
subjectExponents = rnorm(1, 0, exponentsRandom),
subjectLossAversion = rnorm(1, 0, lossAversionRandom),
subjectLearning = rnorm(1, 0, learningRandom))
subjectProfile['subjectLossAversion']
subjectProfile <- c(subjectIntercept = rnorm(1, 0, interceptRandom),
subjectExponents = rnorm(1, 0, exponentsRandom),
subjectLossAversion = rnorm(1, 0, lossAversionRandom),
subjectLearning = rnorm(1, 0, learningRandom))
subjectProfile['subjectLossAversion']
subjectProfile <- c(subjectIntercept = rnorm(1, 0, interceptRandom),
subjectExponents = rnorm(1, 0, exponentsRandom),
subjectLossAversion = rnorm(1, 0, lossAversionRandom),
subjectLearning = rnorm(1, 0, learningRandom))
subjectProfile['subjectLossAversion']
subjectProfile <- c(subjectIntercept = rnorm(1, 0, interceptRandom),
subjectExponents = rnorm(1, 0, exponentsRandom),
subjectLossAversion = rnorm(1, 0, lossAversionRandom),
subjectLearning = rnorm(1, 0, learningRandom))
subjectProfile['subjectLossAversion']
subjectProfile <- c(subjectIntercept = rnorm(1, 0, interceptRandom),
subjectExponents = rnorm(1, 0, exponentsRandom),
subjectLossAversion = rnorm(1, 0, lossAversionRandom),
subjectLearning = rnorm(1, 0, learningRandom))
subjectProfile['subjectLossAversion']
s <- data.frame(x = seq(-.5,.5,.001))
head(s)
s$y <- valueFunction(s$x + 0.5, 1, buildSubjectProfile())
plot(s)
subjectProfile <- buildSubjectProfile()
subjectProfile
## RANDOM EFFECTS
## keeping these pretty tight for now
interceptRandom <- abs(toLogOdds(.05))
exponentsRandom <- .2
lossAversionRandom <- 1
learningRandom <- 200
subjectProfile <- buildSubjectProfile()
subjectProfile
subjectProfile <- buildSubjectProfile()
subjectProfile
subjectProfile <- buildSubjectProfile()
subjectProfile
lossAversionFinal <- max(lossAversionFixed * convertBias(bias, lossAversionFixed) + subjectProfile['subjectLossAversion'], 1)
lossAversionFinal
subjectProfile <- buildSubjectProfile()
lossAversionFinal <- max(lossAversionFixed * convertBias(bias, lossAversionFixed) + subjectProfile['subjectLossAversion'], 1)
lossAversionFinal
s$y <- valueFunction(s$x + 0.5, 1, subjectProfile)
plot(s)
decision <- function(criticalDeckIntensity, bias, trial, subjectProfile, learningRate) {
## takes as input all this stuff above
## returns the probability of choosing the reference deck
## Level 1 equation
proba <- subjectProfile['subjectIntercept'] + valueFunction(criticalDeckIntensity, bias, subjectProfile) * min((trial / learningRate), 1) + rnorm(1, 0, noiseSd)
proba <- exp(proba) / (1 + exp(proba))
return(proba)
}
s$y <- decision(s$x + 0.5, 1, 4, subjectProfile, 4)
plot(s)
s[s$x == .5,]
s[s$x == 0,]
subjectProfile
decision <- function(criticalDeckIntensity, bias, trial, subjectProfile, learningRate) {
## takes as input all this stuff above
## returns the probability of choosing the reference deck
## Level 1 equation (dropping intercept)
proba <- valueFunction(criticalDeckIntensity, bias, subjectProfile) * min((trial / learningRate), 1) + rnorm(1, 0, noiseSd) # subjectProfile['subjectIntercept'] +
proba <- exp(proba) / (1 + exp(proba))
return(proba)
}
s$y <- decision(s$x + 0.5, 1, 4, subjectProfile, 4)
plot(s)
buildSubjectProfile()
## global vars
nTrials <- 700
## FIXED EFFECTS
exponentsFixed <- .3
lossAversionFixed <- 3
learningFixed <- 200
## RANDOM EFFECTS
## keeping these pretty tight for now
#interceptRandom <- abs(toLogOdds(.05))
exponentsRandom <- .2
lossAversionRandom <- 1
learningRandom <- 200
interceptRandom <- 0
# exponentsRandom <- 0
# lossAversionRandom <- 0
buildSubjectProfile()
buildSubjectProfile()
buildSubjectProfile()
buildSubjectProfile()
buildSubjectProfile()
buildSubjectProfile()
buildSubjectProfile()
buildSubjectProfile()
plot(s$x, decision(s$x + 0.5, 1, 5, buildSubjectProfile, 5))
s$x
plot(s$x, decision(s$x + 0.5, 1, 5, buildSubjectProfile(), 5))
plot(s$x, decision(s$x + 0.5, 1, 5, buildSubjectProfile(), 5))
plot(s$x, decision(s$x + 0.5, 1, 5, buildSubjectProfile(), 5))
plot(s$x, decision(s$x + 0.5, 1, 5, buildSubjectProfile(), 5))
plot(s$x, decision(s$x + 0.5, 1, 5, buildSubjectProfile(), 5))
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
d <- powerSimulator(30, 1, 1)
d <- translateToDeviation(d)
ezANOVA(wid = subject, within = .(difference, difficulty), dv = referenceDeviation, data = d, detailed = TRUE)
## visualize difference
d %>%
group_by(subject, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difference, y = referenceDeviation, group = subject)) +
geom_line()
## visualize difficulty
d %>%
group_by(subject, difficulty) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difficulty, y = referenceDeviation, group = subject)) +
geom_line()
d0 <- powerSimulator(30, 1, 1)
head(d)
d %>%
unite(condition, c('difference', 'difficulty'))
head(d0)
d0 %>%
unite(condition, c('difference', 'difficulty')) %>%
d0 %>%
unite(condition, c('difference', 'difficulty'))
d0 %>%
unite(condition, c('difference', 'difficulty')) %>%
group_by(condition, trial) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
ggplot(aes(x = trial, y = referenceSelection, group = condition)) +
geom_line(aes(color = condition)) +
ylim(0,1)
help(rep)
rep(c(1:3), each = 3)
d0 %>%
mutate(bin = rep(rep(1:(175/5), each = 5), 30*4))
d0 %>%
mutate(bin = rep(rep(1:(175/5), each = 5), 30*4)) %>%
group_by(bin) %>%
summarize(referenceSelection) %>%
filter(subject < 11) %>%
unite(condition, c('difference', 'difficulty')) %>%
ggplot(aes(x = subject, y = referenceSelection, group = condition)) +
geom_line(aes(color = condition)) +
facet_wrap(~subject)
d0 %>%
mutate(bin = rep(rep(1:(175/5), each = 5), 30*4)) %>%
group_by(bin) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
filter(subject < 11) %>%
unite(condition, c('difference', 'difficulty')) %>%
ggplot(aes(x = subject, y = referenceSelection, group = condition)) +
geom_line(aes(color = condition)) +
facet_wrap(~subject)
d0 %>%
mutate(bin = rep(rep(1:(175/5), each = 5), 30*4)) %>%
group_by(bin) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
filter(subject < 11) %>%
unite(condition, c('difference', 'difficulty')) %>%
ggplot(aes(x = bin, y = referenceSelection, group = condition)) +
geom_line(aes(color = condition)) +
facet_wrap(~subject)
d0 %>%
mutate(bin = rep(rep(1:(175/5), each = 5), 30*4)) %>%
group_by(bin) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
head()
d0 %>%
mutate(bin = rep(rep(1:(175/5), each = 5), 30*4)) %>%
group_by(subject, difference, difficulty, bin) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
head()
d0 %>%
mutate(bin = rep(rep(1:(175/5), each = 5), 30*4)) %>%
group_by(subject, difference, difficulty, bin) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
filter(subject < 11) %>%
unite(condition, c('difference', 'difficulty')) %>%
ggplot(aes(x = bin, y = referenceSelection, group = condition)) +
geom_line(aes(color = condition)) +
facet_wrap(~subject)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
d0 <- powerSimulator(30, 1, 1)
d <- translateToDeviation(d0)
ezANOVA(wid = subject, within = .(difference, difficulty), dv = referenceDeviation, data = d, detailed = TRUE)
## visualize difference
d %>%
group_by(subject, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difference, y = referenceDeviation, group = subject)) +
geom_line()
## visualize difficulty
d %>%
group_by(subject, difficulty) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difficulty, y = referenceDeviation, group = subject)) +
geom_line()
## binned and broken down by individual subjects
d0 %>%
mutate(bin = rep(rep(1:(175/5), each = 5), 30*4)) %>%
group_by(subject, difference, difficulty, bin) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
filter(subject < 11) %>%
unite(condition, c('difference', 'difficulty')) %>%
ggplot(aes(x = bin, y = referenceSelection, group = condition)) +
geom_line(aes(color = condition)) +
facet_wrap(~subject)
## averaged across subjects
d0 %>%
unite(condition, c('difference', 'difficulty')) %>%
group_by(condition, trial) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
ggplot(aes(x = trial, y = referenceSelection, group = condition)) +
geom_line(aes(color = condition)) +
ylim(0,1)
## interaction overall
d %>%
group_by(subject, difficulty, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
group_by(difficulty, difference) %>%
summarize(refDev = mean(referenceDeviation), se = sd(referenceDeviation) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = refDev, group = difference)) +
geom_bar(aes(fill = difference), position = position_dodge(width = .9), stat = 'identity') +
geom_errorbar(aes(ymin = refDev - se, ymax = refDev + se), position = position_dodge(width = .9), width = .5)
## interaction overall
d0 %>%
group_by(subject, difficulty, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
group_by(difficulty, difference) %>%
summarize(refDev = mean(referenceDeviation), se = sd(referenceDeviation) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = refDev, group = difference)) +
geom_bar(aes(fill = difference), position = position_dodge(width = .9), stat = 'identity') +
geom_errorbar(aes(ymin = refDev - se, ymax = refDev + se), position = position_dodge(width = .9), width = .5)
## interaction overall
d0 %>%
group_by(subject, difficulty, difference) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
group_by(difficulty, difference) %>%
summarize(refSel = mean(referenceSelection), se = sd(referenceSelection) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = refSel, group = difference)) +
geom_bar(aes(fill = difference), position = position_dodge(width = .9), stat = 'identity') +
geom_errorbar(aes(ymin = refSel - se, ymax = refSel + se), position = position_dodge(width = .9), width = .5)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
d0 <- powerSimulator(30, 1, 1)
d <- translateToDeviation(d0)
ezANOVA(wid = subject, within = .(difference, difficulty), dv = referenceDeviation, data = d, detailed = TRUE)
## visualize difference
d %>%
group_by(subject, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difference, y = referenceDeviation, group = subject)) +
geom_line()
## visualize difficulty
d %>%
group_by(subject, difficulty) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
ggplot(aes(x = difficulty, y = referenceDeviation, group = subject)) +
geom_line()
## interaction overall
d0 %>%
group_by(subject, difficulty, difference) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
group_by(difficulty, difference) %>%
summarize(refSel = mean(referenceSelection), se = sd(referenceSelection) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = refSel, group = difference)) +
geom_bar(aes(fill = difference), position = position_dodge(width = .9), stat = 'identity') +
geom_errorbar(aes(ymin = refSel - se, ymax = refSel + se), position = position_dodge(width = .9), width = .5)
d %>%
group_by(subject, difficulty, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
group_by(difficulty, difference) %>%
summarize(refDev = mean(referenceDeviation), se = sd(referenceDeviation) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = refDev, group = difference)) +
geom_bar(aes(fill = difference), position = position_dodge(width = .9), stat = 'identity') +
geom_errorbar(aes(ymin = refDev - se, ymax = refDev + se), position = position_dodge(width = .9), width = .5)
## averaged across subjects
d0 %>%
unite(condition, c('difference', 'difficulty')) %>%
group_by(condition, trial) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
ggplot(aes(x = trial, y = referenceSelection, group = condition)) +
geom_line(aes(color = condition)) +
ylim(0,1)
## binned and broken down by individual subjects
d0 %>%
mutate(bin = rep(rep(1:(175/5), each = 5), 30*4)) %>%
group_by(subject, difference, difficulty, bin) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
filter(subject < 11) %>%
unite(condition, c('difference', 'difficulty')) %>%
ggplot(aes(x = bin, y = referenceSelection, group = condition)) +
geom_line(aes(color = condition)) +
facet_wrap(~subject)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
d0 <- powerSimulator(30, 1, 1)
d <- translateToDeviation(d0)
ezANOVA(wid = subject, within = .(difference, difficulty), dv = referenceDeviation, data = d, detailed = TRUE)
## interaction overall
d0 %>%
group_by(subject, difficulty, difference) %>%
summarize(referenceSelection = mean(referenceSelection)) %>%
group_by(difficulty, difference) %>%
summarize(refSel = mean(referenceSelection), se = sd(referenceSelection) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = refSel, group = difference)) +
geom_bar(aes(fill = difference), position = position_dodge(width = .9), stat = 'identity') +
geom_errorbar(aes(ymin = refSel - se, ymax = refSel + se), position = position_dodge(width = .9), width = .5)
d %>%
group_by(subject, difficulty, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation)) %>%
group_by(difficulty, difference) %>%
summarize(refDev = mean(referenceDeviation), se = sd(referenceDeviation) / sqrt(n())) %>%
ggplot(aes(x = difficulty, y = refDev, group = difference)) +
geom_bar(aes(fill = difference), position = position_dodge(width = .9), stat = 'identity') +
geom_errorbar(aes(ymin = refDev - se, ymax = refDev + se), position = position_dodge(width = .9), width = .5)
head(d)
d
tail(d)
testDirection <- function(experimentData) {
cellMeans <- experimentData %>%
group_by(difficulty, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation))
output <- 0
modHard <- cellMeans[cellMeans$difficulty == 'harder' & cellMeans$difference == 'moderate',]
modEasy <- cellMeans[cellMeans$difficulty == 'easier' & cellMeans$difference == 'moderate',]
extHard <- cellMeans[cellMeans$difficulty == 'harder' & cellMeans$difference == 'extreme',]
extEasy <- cellMeans[cellMeans$difficulty == 'easier' & cellMeans$difference == 'extreme',]
if (modHard > extHard & modEasy > extEasy) {
output <- 1
}
return(output)
}
testDirection(d)
cellMeans <- d %>%
group_by(difficulty, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation))
cellMeans
modHard <- cellMeans[cellMeans$difficulty == 'harder' & cellMeans$difference == 'moderate',]
modEasy <- cellMeans[cellMeans$difficulty == 'easier' & cellMeans$difference == 'moderate',]
extHard <- cellMeans[cellMeans$difficulty == 'harder' & cellMeans$difference == 'extreme',]
extEasy <- cellMeans[cellMeans$difficulty == 'easier' & cellMeans$difference == 'extreme',]
modHard
testDirection <- function(experimentData) {
cellMeans <- experimentData %>%
group_by(difficulty, difference) %>%
summarize(referenceDeviation = mean(referenceDeviation))
output <- 0
modHard <- cellMeans[cellMeans$difficulty == 'harder' & cellMeans$difference == 'moderate',]$referenceDeviation
modEasy <- cellMeans[cellMeans$difficulty == 'easier' & cellMeans$difference == 'moderate',]$referenceDeviation
extHard <- cellMeans[cellMeans$difficulty == 'harder' & cellMeans$difference == 'extreme',]$referenceDeviation
extEasy <- cellMeans[cellMeans$difficulty == 'easier' & cellMeans$difference == 'extreme',]$referenceDeviation
if (modHard > extHard & modEasy > extEasy) {
output <- 1
}
return(output)
}
testDirection(d)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
q()
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
powerSimulator(20,1,2)
class(experimentResults)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
powerSimulator(20,1,2)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
powerSimulator(20,1,2)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
powerSimulator(20,1,2)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
powerSimulator(20,1,2)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
biasRange <- 1:3
nRange <- 20:410
nRange <- 20:40
paste('powerAnalysisBias', min(biasRange),'-', max(biasRange),'nRange', min(nRange), '-', max(nRange), '.csv', sep = '')
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/hyperparameterTuning.r')
exp1Power(c(10,15), 1, 2)
print()
print(')')
print('')
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/hyperparameterTuning.r')
exp1Power(nRange = c(10,15), biasRange = 1, nSims = 2)
d <- read.csv('data/powerAnalysisBias1-1nRange10-15.csv')
head(d)
exp1Power(nRange = 30, biasRange = .2, nSims = 2)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/hyperparameterTuning.r')
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
exp1Power(nRange = 50, biasRange = .2, nSims = 2)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/hyperparameterTuning.r')
exp1Power(nRange = 50, biasRange = .2, nSims = 2)
exp1Power(nRange = 50, biasRange = .3, nSims = 2)
exp1Power(nRange = 60, biasRange = .4, nSims = 2)
exp1Power(nRange = 60, biasRange = .4, nSims = 2)
exp1Power(nRange = 100, biasRange = .4, nSims = 10)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/powerSimulator.r')
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/hyperparameterTuning.r')
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/hyperparameterTuning.r')
exp1Power(10, .5, 2, 1)
source('~/OneDrive/Research/By Project/Dissertation/experiments/power/exp1/hyperparameterTuning.r')
exp1Power(10, .5, 2, 1)
exp1Power(10, .5, 1, 1)
seq(10,10,10)
median(seq(.4,1,.1))
length(seq(.4,1,.1)) %% 2
length(seq(10,100,10)) %%2
median(seq(10,100,10))
getwd()
setwd('..')
getwd()
setwd('exp1')
getwd()
q()
